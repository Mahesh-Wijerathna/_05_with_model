name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    outputs:
      frontend-image: ${{ steps.meta.outputs.tags }}-frontend
      backend-image: ${{ steps.meta.outputs.tags }}-backend

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Frontend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./game-review-sentiment
        push: true
        tags: ${{ steps.meta.outputs.tags }}-frontend
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push Backend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./game-review-sentiment-backend
        push: true
        tags: ${{ steps.meta.outputs.tags }}-backend
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate deployment info
      run: |
        echo "âœ… Build completed successfully!"
        echo "Frontend image: ${{ steps.meta.outputs.tags }}-frontend"
        echo "Backend image: ${{ steps.meta.outputs.tags }}-backend"
        echo ""
        echo "ðŸ“‹ To deploy locally:"
        echo "1. Start Minikube: minikube start"
        echo "2. Run: kubectl apply -f k8s/"
        echo "3. Check status: kubectl get pods -n game-review-app"
        echo "4. Access app: minikube service frontend -n game-review-app"
