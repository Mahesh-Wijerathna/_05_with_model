name: Build and Deploy Frontend

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mahesh-wijerathna/game-review-sentiment-app

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Verify Frontend Dockerfile exists
      run: |
        if [ ! -f "./Game-Review-Sentiment-Analysis-Web-app/game-review-sentiment/Dockerfile" ]; then
          echo "‚ùå Frontend Dockerfile not found!"
          exit 1
        fi
        echo "‚úÖ Frontend Dockerfile found!"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Frontend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./Game-Review-Sentiment-Analysis-Web-app/game-review-sentiment
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-frontend
        labels: org.opencontainers.image.title=Game-Review-Sentiment-App
        cache-from: ""
        cache-to: ""

    - name: Generate deployment info
      run: |
        echo "‚úÖ Frontend build completed successfully!"
        echo "Frontend image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-frontend"
        echo ""
        echo "üìã Quick deployment:"
        echo "echo 'YOUR_PAT' | docker login ghcr.io -u Mahesh-Wijerathna --password-stdin"
        echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-frontend"
        echo "docker run -d -p 3000:3000 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-frontend"
        echo ""
        echo "üåê Access at: http://localhost:3000"